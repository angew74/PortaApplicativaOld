'------------------------------------------------------------------------------
' <auto-generated>
'     Il codice è stato generato da uno strumento.
'     Versione runtime:2.0.50727.3625
'
'     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
'     il codice viene rigenerato.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Il codice sorgente è stato generato automaticamente da Microsoft.VSDesigner, versione 2.0.50727.3625.
'
Namespace PAVerifiche1
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="NVASoap", [Namespace]:="http://servizi.comune.roma.it/verificheanagrafiche")>  _
    Partial Public Class NVA
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private logHeaderValueField As LogHeader
        
        Private VerificaAnagraficaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaAnagraficaSuperOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaCRIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaPermOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaLeggeRutelliOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaAnagraficaEstesaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaDocumentiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaCartaIdentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaElettoraleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaLevaMilitareOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaSitFamigliaConvOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaStatoFamigliaConvOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaStoricaDocumentiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaStoricaIndividuoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaVaccinazioniOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaDomiciliatiperIndirizzoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaDomiciliatiperIndirizzoeFamigliaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaDomXRangeCiviciOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaCartaIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaStoricoFamigliaXDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaNullaOstaCIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Test_PA_Anagrafe.My.MySettings.Default.Test_PA_Anagrafe_PAVerifiche1_NVA
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property LogHeaderValue() As LogHeader
            Get
                Return Me.logHeaderValueField
            End Get
            Set
                Me.logHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event VerificaAnagraficaCompleted As VerificaAnagraficaCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaAnagraficaSuperCompleted As VerificaAnagraficaSuperCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaCRICompleted As VerificaCRICompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaPermCompleted As VerificaPermCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaLeggeRutelliCompleted As VerificaLeggeRutelliCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaAnagraficaEstesaCompleted As VerificaAnagraficaEstesaCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaDocumentiCompleted As VerificaDocumentiCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaCartaIdentCompleted As VerificaCartaIdentCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaElettoraleCompleted As VerificaElettoraleCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaLevaMilitareCompleted As VerificaLevaMilitareCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaSitFamigliaConvCompleted As VerificaSitFamigliaConvCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaStatoFamigliaConvCompleted As VerificaStatoFamigliaConvCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaStoricaDocumentiCompleted As VerificaStoricaDocumentiCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaStoricaIndividuoCompleted As VerificaStoricaIndividuoCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaVaccinazioniCompleted As VerificaVaccinazioniCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaDomiciliatiperIndirizzoCompleted As VerificaDomiciliatiperIndirizzoCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaDomiciliatiperIndirizzoeFamigliaCompleted As VerificaDomiciliatiperIndirizzoeFamigliaCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaDomXRangeCiviciCompleted As VerificaDomXRangeCiviciCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaCartaIdCompleted As VerificaCartaIdCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaStoricoFamigliaXDataCompleted As VerificaStoricoFamigliaXDataCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaNullaOstaCICompleted As VerificaNullaOstaCICompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaAnagrafica", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaAnagrafica(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaAnagrafica", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaAnagrafica(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaAnagrafica", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaAnagrafica(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaAnagraficaAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaAnagraficaAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaAnagraficaAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaAnagraficaOperationCompleted Is Nothing) Then
                Me.VerificaAnagraficaOperationCompleted = AddressOf Me.OnVerificaAnagraficaOperationCompleted
            End If
            Me.InvokeAsync("VerificaAnagrafica", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaAnagraficaOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaAnagraficaOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaAnagraficaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaAnagraficaCompleted(Me, New VerificaAnagraficaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaAnagraficaSuper", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaAnagraficaSuper(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaAnagraficaSuper", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaAnagraficaSuper(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaAnagraficaSuper", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaAnagraficaSuper(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaAnagraficaSuperAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaAnagraficaSuperAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaAnagraficaSuperAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaAnagraficaSuperOperationCompleted Is Nothing) Then
                Me.VerificaAnagraficaSuperOperationCompleted = AddressOf Me.OnVerificaAnagraficaSuperOperationCompleted
            End If
            Me.InvokeAsync("VerificaAnagraficaSuper", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaAnagraficaSuperOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaAnagraficaSuperOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaAnagraficaSuperCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaAnagraficaSuperCompleted(Me, New VerificaAnagraficaSuperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaCRI", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaCRI(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal AnnoNascita As Short, ByVal AnnoPratica As Short, ByVal NumeroPratica As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaCRI", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, AnnoNascita, AnnoPratica, NumeroPratica, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaCRI(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal AnnoNascita As Short, ByVal AnnoPratica As Short, ByVal NumeroPratica As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaCRI", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, AnnoNascita, AnnoPratica, NumeroPratica, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaCRI(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaCRIAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal AnnoNascita As Short, ByVal AnnoPratica As Short, ByVal NumeroPratica As Short, ByVal ServiceLevel As Byte)
            Me.VerificaCRIAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, AnnoNascita, AnnoPratica, NumeroPratica, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaCRIAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal AnnoNascita As Short, ByVal AnnoPratica As Short, ByVal NumeroPratica As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaCRIOperationCompleted Is Nothing) Then
                Me.VerificaCRIOperationCompleted = AddressOf Me.OnVerificaCRIOperationCompleted
            End If
            Me.InvokeAsync("VerificaCRI", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, AnnoNascita, AnnoPratica, NumeroPratica, ServiceLevel}, Me.VerificaCRIOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaCRIOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaCRICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaCRICompleted(Me, New VerificaCRICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaPerm", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaPerm(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal AnnoNascita As Short, ByVal AnnoPratica As Short, ByVal NumeroPratica As Integer, ByVal NumAttestato As String, ByVal NumPermesso As String, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaPerm", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, AnnoNascita, AnnoPratica, NumeroPratica, NumAttestato, NumPermesso, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaPerm( _
                    ByVal TipoInterr As Byte,  _
                    ByVal CodiceIndividuale As String,  _
                    ByVal CodiceFiscale As String,  _
                    ByVal Sesso As String,  _
                    ByVal Cognome As String,  _
                    ByVal Nome As String,  _
                    ByVal GiornoNascita As Byte,  _
                    ByVal MeseNascita As Byte,  _
                    ByVal AnnoNascita As Short,  _
                    ByVal AnnoPratica As Short,  _
                    ByVal NumeroPratica As Integer,  _
                    ByVal NumAttestato As String,  _
                    ByVal NumPermesso As String,  _
                    ByVal ServiceLevel As Byte,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaPerm", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, AnnoNascita, AnnoPratica, NumeroPratica, NumAttestato, NumPermesso, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaPerm(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaPermAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal AnnoNascita As Short, ByVal AnnoPratica As Short, ByVal NumeroPratica As Integer, ByVal NumAttestato As String, ByVal NumPermesso As String, ByVal ServiceLevel As Byte)
            Me.VerificaPermAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, AnnoNascita, AnnoPratica, NumeroPratica, NumAttestato, NumPermesso, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaPermAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal AnnoNascita As Short, ByVal AnnoPratica As Short, ByVal NumeroPratica As Integer, ByVal NumAttestato As String, ByVal NumPermesso As String, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaPermOperationCompleted Is Nothing) Then
                Me.VerificaPermOperationCompleted = AddressOf Me.OnVerificaPermOperationCompleted
            End If
            Me.InvokeAsync("VerificaPerm", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, AnnoNascita, AnnoPratica, NumeroPratica, NumAttestato, NumPermesso, ServiceLevel}, Me.VerificaPermOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaPermOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaPermCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaPermCompleted(Me, New VerificaPermCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaLeggeRutelli", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaLeggeRutelli(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaLeggeRutelli", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaLeggeRutelli(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaLeggeRutelli", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaLeggeRutelli(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaLeggeRutelliAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaLeggeRutelliAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaLeggeRutelliAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaLeggeRutelliOperationCompleted Is Nothing) Then
                Me.VerificaLeggeRutelliOperationCompleted = AddressOf Me.OnVerificaLeggeRutelliOperationCompleted
            End If
            Me.InvokeAsync("VerificaLeggeRutelli", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaLeggeRutelliOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaLeggeRutelliOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaLeggeRutelliCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaLeggeRutelliCompleted(Me, New VerificaLeggeRutelliCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaAnagraficaEstesa", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaAnagraficaEstesa(ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal AnnoIniziale As Short, ByVal AnnoFinale As Short, ByVal Patern As String, ByVal Matern As String, ByVal Domicilio As String, ByVal ComuneNascita As String, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaAnagraficaEstesa", New Object() {Sesso, Cognome, Nome, AnnoIniziale, AnnoFinale, Patern, Matern, Domicilio, ComuneNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaAnagraficaEstesa(ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal AnnoIniziale As Short, ByVal AnnoFinale As Short, ByVal Patern As String, ByVal Matern As String, ByVal Domicilio As String, ByVal ComuneNascita As String, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaAnagraficaEstesa", New Object() {Sesso, Cognome, Nome, AnnoIniziale, AnnoFinale, Patern, Matern, Domicilio, ComuneNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaAnagraficaEstesa(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaAnagraficaEstesaAsync(ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal AnnoIniziale As Short, ByVal AnnoFinale As Short, ByVal Patern As String, ByVal Matern As String, ByVal Domicilio As String, ByVal ComuneNascita As String, ByVal ServiceLevel As Byte)
            Me.VerificaAnagraficaEstesaAsync(Sesso, Cognome, Nome, AnnoIniziale, AnnoFinale, Patern, Matern, Domicilio, ComuneNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaAnagraficaEstesaAsync(ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal AnnoIniziale As Short, ByVal AnnoFinale As Short, ByVal Patern As String, ByVal Matern As String, ByVal Domicilio As String, ByVal ComuneNascita As String, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaAnagraficaEstesaOperationCompleted Is Nothing) Then
                Me.VerificaAnagraficaEstesaOperationCompleted = AddressOf Me.OnVerificaAnagraficaEstesaOperationCompleted
            End If
            Me.InvokeAsync("VerificaAnagraficaEstesa", New Object() {Sesso, Cognome, Nome, AnnoIniziale, AnnoFinale, Patern, Matern, Domicilio, ComuneNascita, ServiceLevel}, Me.VerificaAnagraficaEstesaOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaAnagraficaEstesaOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaAnagraficaEstesaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaAnagraficaEstesaCompleted(Me, New VerificaAnagraficaEstesaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaDocumenti", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaDocumenti(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaDocumenti", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaDocumenti(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaDocumenti", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaDocumenti(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaDocumentiAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaDocumentiAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaDocumentiAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaDocumentiOperationCompleted Is Nothing) Then
                Me.VerificaDocumentiOperationCompleted = AddressOf Me.OnVerificaDocumentiOperationCompleted
            End If
            Me.InvokeAsync("VerificaDocumenti", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaDocumentiOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaDocumentiOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaDocumentiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaDocumentiCompleted(Me, New VerificaDocumentiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaCartaIdent", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaCartaIdent(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaCartaIdent", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaCartaIdent(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaCartaIdent", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaCartaIdent(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaCartaIdentAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaCartaIdentAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaCartaIdentAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaCartaIdentOperationCompleted Is Nothing) Then
                Me.VerificaCartaIdentOperationCompleted = AddressOf Me.OnVerificaCartaIdentOperationCompleted
            End If
            Me.InvokeAsync("VerificaCartaIdent", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaCartaIdentOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaCartaIdentOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaCartaIdentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaCartaIdentCompleted(Me, New VerificaCartaIdentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaElettorale", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaElettorale(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaElettorale", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaElettorale(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaElettorale", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaElettorale(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaElettoraleAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaElettoraleAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaElettoraleAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaElettoraleOperationCompleted Is Nothing) Then
                Me.VerificaElettoraleOperationCompleted = AddressOf Me.OnVerificaElettoraleOperationCompleted
            End If
            Me.InvokeAsync("VerificaElettorale", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaElettoraleOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaElettoraleOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaElettoraleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaElettoraleCompleted(Me, New VerificaElettoraleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaLevaMilitare", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaLevaMilitare(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaLevaMilitare", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaLevaMilitare(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaLevaMilitare", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaLevaMilitare(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaLevaMilitareAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaLevaMilitareAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaLevaMilitareAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaLevaMilitareOperationCompleted Is Nothing) Then
                Me.VerificaLevaMilitareOperationCompleted = AddressOf Me.OnVerificaLevaMilitareOperationCompleted
            End If
            Me.InvokeAsync("VerificaLevaMilitare", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaLevaMilitareOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaLevaMilitareOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaLevaMilitareCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaLevaMilitareCompleted(Me, New VerificaLevaMilitareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaSitFamigliaConv", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaSitFamigliaConv(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaSitFamigliaConv", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaSitFamigliaConv(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaSitFamigliaConv", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaSitFamigliaConv(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaSitFamigliaConvAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaSitFamigliaConvAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaSitFamigliaConvAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaSitFamigliaConvOperationCompleted Is Nothing) Then
                Me.VerificaSitFamigliaConvOperationCompleted = AddressOf Me.OnVerificaSitFamigliaConvOperationCompleted
            End If
            Me.InvokeAsync("VerificaSitFamigliaConv", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaSitFamigliaConvOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaSitFamigliaConvOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaSitFamigliaConvCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaSitFamigliaConvCompleted(Me, New VerificaSitFamigliaConvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaStatoFamigliaConv", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaStatoFamigliaConv(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaStatoFamigliaConv", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaStatoFamigliaConv(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaStatoFamigliaConv", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaStatoFamigliaConv(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaStatoFamigliaConvAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaStatoFamigliaConvAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaStatoFamigliaConvAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaStatoFamigliaConvOperationCompleted Is Nothing) Then
                Me.VerificaStatoFamigliaConvOperationCompleted = AddressOf Me.OnVerificaStatoFamigliaConvOperationCompleted
            End If
            Me.InvokeAsync("VerificaStatoFamigliaConv", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaStatoFamigliaConvOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaStatoFamigliaConvOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaStatoFamigliaConvCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaStatoFamigliaConvCompleted(Me, New VerificaStatoFamigliaConvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaStoricaDocumenti", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaStoricaDocumenti(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaStoricaDocumenti", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaStoricaDocumenti(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaStoricaDocumenti", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaStoricaDocumenti(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaStoricaDocumentiAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaStoricaDocumentiAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaStoricaDocumentiAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaStoricaDocumentiOperationCompleted Is Nothing) Then
                Me.VerificaStoricaDocumentiOperationCompleted = AddressOf Me.OnVerificaStoricaDocumentiOperationCompleted
            End If
            Me.InvokeAsync("VerificaStoricaDocumenti", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaStoricaDocumentiOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaStoricaDocumentiOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaStoricaDocumentiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaStoricaDocumentiCompleted(Me, New VerificaStoricaDocumentiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaStoricaIndividuo", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaStoricaIndividuo(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaStoricaIndividuo", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaStoricaIndividuo(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaStoricaIndividuo", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaStoricaIndividuo(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaStoricaIndividuoAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaStoricaIndividuoAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaStoricaIndividuoAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaStoricaIndividuoOperationCompleted Is Nothing) Then
                Me.VerificaStoricaIndividuoOperationCompleted = AddressOf Me.OnVerificaStoricaIndividuoOperationCompleted
            End If
            Me.InvokeAsync("VerificaStoricaIndividuo", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaStoricaIndividuoOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaStoricaIndividuoOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaStoricaIndividuoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaStoricaIndividuoCompleted(Me, New VerificaStoricaIndividuoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaVaccinazioni", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaVaccinazioni(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaVaccinazioni", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaVaccinazioni(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaVaccinazioni", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaVaccinazioni(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaVaccinazioniAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaVaccinazioniAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaVaccinazioniAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaVaccinazioniOperationCompleted Is Nothing) Then
                Me.VerificaVaccinazioniOperationCompleted = AddressOf Me.OnVerificaVaccinazioniOperationCompleted
            End If
            Me.InvokeAsync("VerificaVaccinazioni", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaVaccinazioniOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaVaccinazioniOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaVaccinazioniCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaVaccinazioniCompleted(Me, New VerificaVaccinazioniCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaDomiciliatiperIndirizz"& _ 
            "o", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaDomiciliatiperIndirizzo(ByVal TipoInterr As Byte, ByVal CodiceVia As Integer, ByVal DenominazioneVia As String, ByVal Numero As Short, ByVal Lettera As String, ByVal Lotto As String, ByVal Palazzina As String, ByVal Km As String, ByVal Scala As String, ByVal Piano As String, ByVal Interno As String, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaDomiciliatiperIndirizzo", New Object() {TipoInterr, CodiceVia, DenominazioneVia, Numero, Lettera, Lotto, Palazzina, Km, Scala, Piano, Interno, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaDomiciliatiperIndirizzo(ByVal TipoInterr As Byte, ByVal CodiceVia As Integer, ByVal DenominazioneVia As String, ByVal Numero As Short, ByVal Lettera As String, ByVal Lotto As String, ByVal Palazzina As String, ByVal Km As String, ByVal Scala As String, ByVal Piano As String, ByVal Interno As String, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaDomiciliatiperIndirizzo", New Object() {TipoInterr, CodiceVia, DenominazioneVia, Numero, Lettera, Lotto, Palazzina, Km, Scala, Piano, Interno, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaDomiciliatiperIndirizzo(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaDomiciliatiperIndirizzoAsync(ByVal TipoInterr As Byte, ByVal CodiceVia As Integer, ByVal DenominazioneVia As String, ByVal Numero As Short, ByVal Lettera As String, ByVal Lotto As String, ByVal Palazzina As String, ByVal Km As String, ByVal Scala As String, ByVal Piano As String, ByVal Interno As String, ByVal ServiceLevel As Byte)
            Me.VerificaDomiciliatiperIndirizzoAsync(TipoInterr, CodiceVia, DenominazioneVia, Numero, Lettera, Lotto, Palazzina, Km, Scala, Piano, Interno, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaDomiciliatiperIndirizzoAsync(ByVal TipoInterr As Byte, ByVal CodiceVia As Integer, ByVal DenominazioneVia As String, ByVal Numero As Short, ByVal Lettera As String, ByVal Lotto As String, ByVal Palazzina As String, ByVal Km As String, ByVal Scala As String, ByVal Piano As String, ByVal Interno As String, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaDomiciliatiperIndirizzoOperationCompleted Is Nothing) Then
                Me.VerificaDomiciliatiperIndirizzoOperationCompleted = AddressOf Me.OnVerificaDomiciliatiperIndirizzoOperationCompleted
            End If
            Me.InvokeAsync("VerificaDomiciliatiperIndirizzo", New Object() {TipoInterr, CodiceVia, DenominazioneVia, Numero, Lettera, Lotto, Palazzina, Km, Scala, Piano, Interno, ServiceLevel}, Me.VerificaDomiciliatiperIndirizzoOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaDomiciliatiperIndirizzoOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaDomiciliatiperIndirizzoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaDomiciliatiperIndirizzoCompleted(Me, New VerificaDomiciliatiperIndirizzoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaDomiciliatiperIndirizz"& _ 
            "oeFamiglia", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaDomiciliatiperIndirizzoeFamiglia(ByVal TipoInterr As Byte, ByVal CodiceVia As Integer, ByVal DenominazioneVia As String, ByVal Numero As Short, ByVal Lettera As String, ByVal Lotto As String, ByVal Palazzina As String, ByVal Km As String, ByVal Scala As String, ByVal Piano As String, ByVal Interno As String, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaDomiciliatiperIndirizzoeFamiglia", New Object() {TipoInterr, CodiceVia, DenominazioneVia, Numero, Lettera, Lotto, Palazzina, Km, Scala, Piano, Interno, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaDomiciliatiperIndirizzoeFamiglia(ByVal TipoInterr As Byte, ByVal CodiceVia As Integer, ByVal DenominazioneVia As String, ByVal Numero As Short, ByVal Lettera As String, ByVal Lotto As String, ByVal Palazzina As String, ByVal Km As String, ByVal Scala As String, ByVal Piano As String, ByVal Interno As String, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaDomiciliatiperIndirizzoeFamiglia", New Object() {TipoInterr, CodiceVia, DenominazioneVia, Numero, Lettera, Lotto, Palazzina, Km, Scala, Piano, Interno, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaDomiciliatiperIndirizzoeFamiglia(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaDomiciliatiperIndirizzoeFamigliaAsync(ByVal TipoInterr As Byte, ByVal CodiceVia As Integer, ByVal DenominazioneVia As String, ByVal Numero As Short, ByVal Lettera As String, ByVal Lotto As String, ByVal Palazzina As String, ByVal Km As String, ByVal Scala As String, ByVal Piano As String, ByVal Interno As String, ByVal ServiceLevel As Byte)
            Me.VerificaDomiciliatiperIndirizzoeFamigliaAsync(TipoInterr, CodiceVia, DenominazioneVia, Numero, Lettera, Lotto, Palazzina, Km, Scala, Piano, Interno, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaDomiciliatiperIndirizzoeFamigliaAsync(ByVal TipoInterr As Byte, ByVal CodiceVia As Integer, ByVal DenominazioneVia As String, ByVal Numero As Short, ByVal Lettera As String, ByVal Lotto As String, ByVal Palazzina As String, ByVal Km As String, ByVal Scala As String, ByVal Piano As String, ByVal Interno As String, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaDomiciliatiperIndirizzoeFamigliaOperationCompleted Is Nothing) Then
                Me.VerificaDomiciliatiperIndirizzoeFamigliaOperationCompleted = AddressOf Me.OnVerificaDomiciliatiperIndirizzoeFamigliaOperationCompleted
            End If
            Me.InvokeAsync("VerificaDomiciliatiperIndirizzoeFamiglia", New Object() {TipoInterr, CodiceVia, DenominazioneVia, Numero, Lettera, Lotto, Palazzina, Km, Scala, Piano, Interno, ServiceLevel}, Me.VerificaDomiciliatiperIndirizzoeFamigliaOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaDomiciliatiperIndirizzoeFamigliaOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaDomiciliatiperIndirizzoeFamigliaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaDomiciliatiperIndirizzoeFamigliaCompleted(Me, New VerificaDomiciliatiperIndirizzoeFamigliaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaDomXRangeCivici", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaDomXRangeCivici(ByVal TipoInterr As Byte, ByVal TipoRange As Byte, ByVal CodiceVia As Integer, ByVal DenominazioneVia As String, ByVal NumeroDa As Short, ByVal NumeroA As Short, ByVal LottoDa As String, ByVal LottoA As String, ByVal PalazzinaDa As String, ByVal PalazzinaA As String, ByVal KmDa As String, ByVal KmA As String, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaDomXRangeCivici", New Object() {TipoInterr, TipoRange, CodiceVia, DenominazioneVia, NumeroDa, NumeroA, LottoDa, LottoA, PalazzinaDa, PalazzinaA, KmDa, KmA, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaDomXRangeCivici(ByVal TipoInterr As Byte, ByVal TipoRange As Byte, ByVal CodiceVia As Integer, ByVal DenominazioneVia As String, ByVal NumeroDa As Short, ByVal NumeroA As Short, ByVal LottoDa As String, ByVal LottoA As String, ByVal PalazzinaDa As String, ByVal PalazzinaA As String, ByVal KmDa As String, ByVal KmA As String, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaDomXRangeCivici", New Object() {TipoInterr, TipoRange, CodiceVia, DenominazioneVia, NumeroDa, NumeroA, LottoDa, LottoA, PalazzinaDa, PalazzinaA, KmDa, KmA, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaDomXRangeCivici(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaDomXRangeCiviciAsync(ByVal TipoInterr As Byte, ByVal TipoRange As Byte, ByVal CodiceVia As Integer, ByVal DenominazioneVia As String, ByVal NumeroDa As Short, ByVal NumeroA As Short, ByVal LottoDa As String, ByVal LottoA As String, ByVal PalazzinaDa As String, ByVal PalazzinaA As String, ByVal KmDa As String, ByVal KmA As String, ByVal ServiceLevel As Byte)
            Me.VerificaDomXRangeCiviciAsync(TipoInterr, TipoRange, CodiceVia, DenominazioneVia, NumeroDa, NumeroA, LottoDa, LottoA, PalazzinaDa, PalazzinaA, KmDa, KmA, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaDomXRangeCiviciAsync(ByVal TipoInterr As Byte, ByVal TipoRange As Byte, ByVal CodiceVia As Integer, ByVal DenominazioneVia As String, ByVal NumeroDa As Short, ByVal NumeroA As Short, ByVal LottoDa As String, ByVal LottoA As String, ByVal PalazzinaDa As String, ByVal PalazzinaA As String, ByVal KmDa As String, ByVal KmA As String, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaDomXRangeCiviciOperationCompleted Is Nothing) Then
                Me.VerificaDomXRangeCiviciOperationCompleted = AddressOf Me.OnVerificaDomXRangeCiviciOperationCompleted
            End If
            Me.InvokeAsync("VerificaDomXRangeCivici", New Object() {TipoInterr, TipoRange, CodiceVia, DenominazioneVia, NumeroDa, NumeroA, LottoDa, LottoA, PalazzinaDa, PalazzinaA, KmDa, KmA, ServiceLevel}, Me.VerificaDomXRangeCiviciOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaDomXRangeCiviciOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaDomXRangeCiviciCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaDomXRangeCiviciCompleted(Me, New VerificaDomXRangeCiviciCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaCartaId", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaCartaId(ByVal Carta As String, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaCartaId", New Object() {Carta, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaCartaId(ByVal Carta As String, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaCartaId", New Object() {Carta, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaCartaId(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaCartaIdAsync(ByVal Carta As String, ByVal ServiceLevel As Byte)
            Me.VerificaCartaIdAsync(Carta, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaCartaIdAsync(ByVal Carta As String, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaCartaIdOperationCompleted Is Nothing) Then
                Me.VerificaCartaIdOperationCompleted = AddressOf Me.OnVerificaCartaIdOperationCompleted
            End If
            Me.InvokeAsync("VerificaCartaId", New Object() {Carta, ServiceLevel}, Me.VerificaCartaIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaCartaIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaCartaIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaCartaIdCompleted(Me, New VerificaCartaIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaStoricoFamigliaXData", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaStoricoFamigliaXData(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal GiornoRif As Byte, ByVal MeseRif As Byte, ByVal AnnoRif As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaStoricoFamigliaXData", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, GiornoRif, MeseRif, AnnoRif, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaStoricoFamigliaXData(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal GiornoRif As Byte, ByVal MeseRif As Byte, ByVal AnnoRif As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaStoricoFamigliaXData", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, GiornoRif, MeseRif, AnnoRif, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaStoricoFamigliaXData(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaStoricoFamigliaXDataAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal GiornoRif As Byte, ByVal MeseRif As Byte, ByVal AnnoRif As Short, ByVal ServiceLevel As Byte)
            Me.VerificaStoricoFamigliaXDataAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, GiornoRif, MeseRif, AnnoRif, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaStoricoFamigliaXDataAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal GiornoRif As Byte, ByVal MeseRif As Byte, ByVal AnnoRif As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaStoricoFamigliaXDataOperationCompleted Is Nothing) Then
                Me.VerificaStoricoFamigliaXDataOperationCompleted = AddressOf Me.OnVerificaStoricoFamigliaXDataOperationCompleted
            End If
            Me.InvokeAsync("VerificaStoricoFamigliaXData", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, GiornoRif, MeseRif, AnnoRif, ServiceLevel}, Me.VerificaStoricoFamigliaXDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaStoricoFamigliaXDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaStoricoFamigliaXDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaStoricoFamigliaXDataCompleted(Me, New VerificaStoricoFamigliaXDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaNullaOstaCI", RequestNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace:="http://servizi.comune.roma.it/verificheanagrafiche", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaNullaOstaCI(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("VerificaNullaOstaCI", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaNullaOstaCI(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaNullaOstaCI", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaNullaOstaCI(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaNullaOstaCIAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte)
            Me.VerificaNullaOstaCIAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaNullaOstaCIAsync(ByVal TipoInterr As Byte, ByVal CodiceIndividuale As String, ByVal CodiceFiscale As String, ByVal Sesso As String, ByVal Cognome As String, ByVal Nome As String, ByVal GiornoNascita As Byte, ByVal MeseNascita As Byte, ByVal annoNascita As Short, ByVal ServiceLevel As Byte, ByVal userState As Object)
            If (Me.VerificaNullaOstaCIOperationCompleted Is Nothing) Then
                Me.VerificaNullaOstaCIOperationCompleted = AddressOf Me.OnVerificaNullaOstaCIOperationCompleted
            End If
            Me.InvokeAsync("VerificaNullaOstaCI", New Object() {TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel}, Me.VerificaNullaOstaCIOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaNullaOstaCIOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaNullaOstaCICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaNullaOstaCICompleted(Me, New VerificaNullaOstaCICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://servizi.comune.roma.it/verificheanagrafiche"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://servizi.comune.roma.it/verificheanagrafiche", IsNullable:=false)>  _
    Partial Public Class LogHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private logGuidField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property LogGuid() As String
            Get
                Return Me.logGuidField
            End Get
            Set
                Me.logGuidField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaAnagraficaCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaAnagraficaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaAnagraficaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaAnagraficaSuperCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaAnagraficaSuperCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaAnagraficaSuperCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaCRICompletedEventHandler(ByVal sender As Object, ByVal e As VerificaCRICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaCRICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaPermCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaPermCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaPermCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaLeggeRutelliCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaLeggeRutelliCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaLeggeRutelliCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaAnagraficaEstesaCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaAnagraficaEstesaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaAnagraficaEstesaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaDocumentiCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaDocumentiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaDocumentiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaCartaIdentCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaCartaIdentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaCartaIdentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaElettoraleCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaElettoraleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaElettoraleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaLevaMilitareCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaLevaMilitareCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaLevaMilitareCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaSitFamigliaConvCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaSitFamigliaConvCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaSitFamigliaConvCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaStatoFamigliaConvCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaStatoFamigliaConvCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaStatoFamigliaConvCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaStoricaDocumentiCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaStoricaDocumentiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaStoricaDocumentiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaStoricaIndividuoCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaStoricaIndividuoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaStoricaIndividuoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaVaccinazioniCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaVaccinazioniCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaVaccinazioniCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaDomiciliatiperIndirizzoCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaDomiciliatiperIndirizzoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaDomiciliatiperIndirizzoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaDomiciliatiperIndirizzoeFamigliaCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaDomiciliatiperIndirizzoeFamigliaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaDomiciliatiperIndirizzoeFamigliaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaDomXRangeCiviciCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaDomXRangeCiviciCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaDomXRangeCiviciCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaCartaIdCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaCartaIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaCartaIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaStoricoFamigliaXDataCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaStoricoFamigliaXDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaStoricoFamigliaXDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VerificaNullaOstaCICompletedEventHandler(ByVal sender As Object, ByVal e As VerificaNullaOstaCICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaNullaOstaCICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
End Namespace
