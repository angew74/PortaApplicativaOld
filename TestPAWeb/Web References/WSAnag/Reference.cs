//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:2.0.50727.3625
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Il codice sorgente è stato generato automaticamente da Microsoft.VSDesigner, versione 2.0.50727.3625.
// 
#pragma warning disable 1591

namespace TestPAWeb.WSAnag {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NVASoap", Namespace="http://servizi.comune.roma.it/verificheanagrafiche")]
    public partial class NVA : Microsoft.Web.Services2.WebServicesClientProtocol {
        
        private LogHeader logHeaderValueField;
        
        private System.Threading.SendOrPostCallback VerificaAnagraficaOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaAnagraficaSuperOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaCRIOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaPermOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaLeggeRutelliOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaAnagraficaEstesaOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaDocumentiOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaCartaIdentOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaElettoraleOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaLevaMilitareOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaSitFamigliaConvOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaStatoFamigliaConvOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaStoricaDocumentiOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaStoricaIndividuoOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaVaccinazioniOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaDomiciliatiperIndirizzoOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaDomiciliatiperIndirizzoeFamigliaOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaDomXRangeCiviciOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaCartaIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaStoricoFamigliaXDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaNullaOstaCIOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaPatenteOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaAutoCertificazioneOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NVA() {
            this.Url = global::TestPAWeb.Properties.Settings.Default.TestPAWeb_WSAnag_NVA;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public LogHeader LogHeaderValue {
            get {
                return this.logHeaderValueField;
            }
            set {
                this.logHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VerificaAnagraficaCompletedEventHandler VerificaAnagraficaCompleted;
        
        /// <remarks/>
        public event VerificaAnagraficaSuperCompletedEventHandler VerificaAnagraficaSuperCompleted;
        
        /// <remarks/>
        public event VerificaCRICompletedEventHandler VerificaCRICompleted;
        
        /// <remarks/>
        public event VerificaPermCompletedEventHandler VerificaPermCompleted;
        
        /// <remarks/>
        public event VerificaLeggeRutelliCompletedEventHandler VerificaLeggeRutelliCompleted;
        
        /// <remarks/>
        public event VerificaAnagraficaEstesaCompletedEventHandler VerificaAnagraficaEstesaCompleted;
        
        /// <remarks/>
        public event VerificaDocumentiCompletedEventHandler VerificaDocumentiCompleted;
        
        /// <remarks/>
        public event VerificaCartaIdentCompletedEventHandler VerificaCartaIdentCompleted;
        
        /// <remarks/>
        public event VerificaElettoraleCompletedEventHandler VerificaElettoraleCompleted;
        
        /// <remarks/>
        public event VerificaLevaMilitareCompletedEventHandler VerificaLevaMilitareCompleted;
        
        /// <remarks/>
        public event VerificaSitFamigliaConvCompletedEventHandler VerificaSitFamigliaConvCompleted;
        
        /// <remarks/>
        public event VerificaStatoFamigliaConvCompletedEventHandler VerificaStatoFamigliaConvCompleted;
        
        /// <remarks/>
        public event VerificaStoricaDocumentiCompletedEventHandler VerificaStoricaDocumentiCompleted;
        
        /// <remarks/>
        public event VerificaStoricaIndividuoCompletedEventHandler VerificaStoricaIndividuoCompleted;
        
        /// <remarks/>
        public event VerificaVaccinazioniCompletedEventHandler VerificaVaccinazioniCompleted;
        
        /// <remarks/>
        public event VerificaDomiciliatiperIndirizzoCompletedEventHandler VerificaDomiciliatiperIndirizzoCompleted;
        
        /// <remarks/>
        public event VerificaDomiciliatiperIndirizzoeFamigliaCompletedEventHandler VerificaDomiciliatiperIndirizzoeFamigliaCompleted;
        
        /// <remarks/>
        public event VerificaDomXRangeCiviciCompletedEventHandler VerificaDomXRangeCiviciCompleted;
        
        /// <remarks/>
        public event VerificaCartaIdCompletedEventHandler VerificaCartaIdCompleted;
        
        /// <remarks/>
        public event VerificaStoricoFamigliaXDataCompletedEventHandler VerificaStoricoFamigliaXDataCompleted;
        
        /// <remarks/>
        public event VerificaNullaOstaCICompletedEventHandler VerificaNullaOstaCICompleted;
        
        /// <remarks/>
        public event VerificaPatenteCompletedEventHandler VerificaPatenteCompleted;
        
        /// <remarks/>
        public event VerificaAutoCertificazioneCompletedEventHandler VerificaAutoCertificazioneCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaAnagrafica", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaAnagrafica(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaAnagrafica", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaAnagraficaAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaAnagraficaAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaAnagraficaAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaAnagraficaOperationCompleted == null)) {
                this.VerificaAnagraficaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaAnagraficaOperationCompleted);
            }
            this.InvokeAsync("VerificaAnagrafica", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaAnagraficaOperationCompleted, userState);
        }
        
        private void OnVerificaAnagraficaOperationCompleted(object arg) {
            if ((this.VerificaAnagraficaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaAnagraficaCompleted(this, new VerificaAnagraficaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaAnagraficaSuper", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaAnagraficaSuper(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaAnagraficaSuper", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaAnagraficaSuperAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaAnagraficaSuperAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaAnagraficaSuperAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaAnagraficaSuperOperationCompleted == null)) {
                this.VerificaAnagraficaSuperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaAnagraficaSuperOperationCompleted);
            }
            this.InvokeAsync("VerificaAnagraficaSuper", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaAnagraficaSuperOperationCompleted, userState);
        }
        
        private void OnVerificaAnagraficaSuperOperationCompleted(object arg) {
            if ((this.VerificaAnagraficaSuperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaAnagraficaSuperCompleted(this, new VerificaAnagraficaSuperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaCRI", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaCRI(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short AnnoNascita, short AnnoPratica, short NumeroPratica, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaCRI", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        AnnoNascita,
                        AnnoPratica,
                        NumeroPratica,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaCRIAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short AnnoNascita, short AnnoPratica, short NumeroPratica, byte ServiceLevel) {
            this.VerificaCRIAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, AnnoNascita, AnnoPratica, NumeroPratica, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaCRIAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short AnnoNascita, short AnnoPratica, short NumeroPratica, byte ServiceLevel, object userState) {
            if ((this.VerificaCRIOperationCompleted == null)) {
                this.VerificaCRIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaCRIOperationCompleted);
            }
            this.InvokeAsync("VerificaCRI", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        AnnoNascita,
                        AnnoPratica,
                        NumeroPratica,
                        ServiceLevel}, this.VerificaCRIOperationCompleted, userState);
        }
        
        private void OnVerificaCRIOperationCompleted(object arg) {
            if ((this.VerificaCRICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaCRICompleted(this, new VerificaCRICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaPerm", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaPerm(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short AnnoNascita, short AnnoPratica, int NumeroPratica, string NumAttestato, string NumPermesso, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaPerm", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        AnnoNascita,
                        AnnoPratica,
                        NumeroPratica,
                        NumAttestato,
                        NumPermesso,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaPermAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short AnnoNascita, short AnnoPratica, int NumeroPratica, string NumAttestato, string NumPermesso, byte ServiceLevel) {
            this.VerificaPermAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, AnnoNascita, AnnoPratica, NumeroPratica, NumAttestato, NumPermesso, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaPermAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short AnnoNascita, short AnnoPratica, int NumeroPratica, string NumAttestato, string NumPermesso, byte ServiceLevel, object userState) {
            if ((this.VerificaPermOperationCompleted == null)) {
                this.VerificaPermOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaPermOperationCompleted);
            }
            this.InvokeAsync("VerificaPerm", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        AnnoNascita,
                        AnnoPratica,
                        NumeroPratica,
                        NumAttestato,
                        NumPermesso,
                        ServiceLevel}, this.VerificaPermOperationCompleted, userState);
        }
        
        private void OnVerificaPermOperationCompleted(object arg) {
            if ((this.VerificaPermCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaPermCompleted(this, new VerificaPermCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaLeggeRutelli", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaLeggeRutelli(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaLeggeRutelli", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaLeggeRutelliAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaLeggeRutelliAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaLeggeRutelliAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaLeggeRutelliOperationCompleted == null)) {
                this.VerificaLeggeRutelliOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaLeggeRutelliOperationCompleted);
            }
            this.InvokeAsync("VerificaLeggeRutelli", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaLeggeRutelliOperationCompleted, userState);
        }
        
        private void OnVerificaLeggeRutelliOperationCompleted(object arg) {
            if ((this.VerificaLeggeRutelliCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaLeggeRutelliCompleted(this, new VerificaLeggeRutelliCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaAnagraficaEstesa", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaAnagraficaEstesa(string Sesso, string Cognome, string Nome, short AnnoIniziale, short AnnoFinale, string Patern, string Matern, string Domicilio, string ComuneNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaAnagraficaEstesa", new object[] {
                        Sesso,
                        Cognome,
                        Nome,
                        AnnoIniziale,
                        AnnoFinale,
                        Patern,
                        Matern,
                        Domicilio,
                        ComuneNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaAnagraficaEstesaAsync(string Sesso, string Cognome, string Nome, short AnnoIniziale, short AnnoFinale, string Patern, string Matern, string Domicilio, string ComuneNascita, byte ServiceLevel) {
            this.VerificaAnagraficaEstesaAsync(Sesso, Cognome, Nome, AnnoIniziale, AnnoFinale, Patern, Matern, Domicilio, ComuneNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaAnagraficaEstesaAsync(string Sesso, string Cognome, string Nome, short AnnoIniziale, short AnnoFinale, string Patern, string Matern, string Domicilio, string ComuneNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaAnagraficaEstesaOperationCompleted == null)) {
                this.VerificaAnagraficaEstesaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaAnagraficaEstesaOperationCompleted);
            }
            this.InvokeAsync("VerificaAnagraficaEstesa", new object[] {
                        Sesso,
                        Cognome,
                        Nome,
                        AnnoIniziale,
                        AnnoFinale,
                        Patern,
                        Matern,
                        Domicilio,
                        ComuneNascita,
                        ServiceLevel}, this.VerificaAnagraficaEstesaOperationCompleted, userState);
        }
        
        private void OnVerificaAnagraficaEstesaOperationCompleted(object arg) {
            if ((this.VerificaAnagraficaEstesaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaAnagraficaEstesaCompleted(this, new VerificaAnagraficaEstesaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaDocumenti", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaDocumenti(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaDocumenti", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaDocumentiAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaDocumentiAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaDocumentiAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaDocumentiOperationCompleted == null)) {
                this.VerificaDocumentiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaDocumentiOperationCompleted);
            }
            this.InvokeAsync("VerificaDocumenti", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaDocumentiOperationCompleted, userState);
        }
        
        private void OnVerificaDocumentiOperationCompleted(object arg) {
            if ((this.VerificaDocumentiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaDocumentiCompleted(this, new VerificaDocumentiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaCartaIdent", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaCartaIdent(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaCartaIdent", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaCartaIdentAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaCartaIdentAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaCartaIdentAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaCartaIdentOperationCompleted == null)) {
                this.VerificaCartaIdentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaCartaIdentOperationCompleted);
            }
            this.InvokeAsync("VerificaCartaIdent", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaCartaIdentOperationCompleted, userState);
        }
        
        private void OnVerificaCartaIdentOperationCompleted(object arg) {
            if ((this.VerificaCartaIdentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaCartaIdentCompleted(this, new VerificaCartaIdentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaElettorale", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaElettorale(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaElettorale", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaElettoraleAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaElettoraleAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaElettoraleAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaElettoraleOperationCompleted == null)) {
                this.VerificaElettoraleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaElettoraleOperationCompleted);
            }
            this.InvokeAsync("VerificaElettorale", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaElettoraleOperationCompleted, userState);
        }
        
        private void OnVerificaElettoraleOperationCompleted(object arg) {
            if ((this.VerificaElettoraleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaElettoraleCompleted(this, new VerificaElettoraleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaLevaMilitare", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaLevaMilitare(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaLevaMilitare", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaLevaMilitareAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaLevaMilitareAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaLevaMilitareAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaLevaMilitareOperationCompleted == null)) {
                this.VerificaLevaMilitareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaLevaMilitareOperationCompleted);
            }
            this.InvokeAsync("VerificaLevaMilitare", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaLevaMilitareOperationCompleted, userState);
        }
        
        private void OnVerificaLevaMilitareOperationCompleted(object arg) {
            if ((this.VerificaLevaMilitareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaLevaMilitareCompleted(this, new VerificaLevaMilitareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaSitFamigliaConv", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaSitFamigliaConv(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaSitFamigliaConv", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaSitFamigliaConvAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaSitFamigliaConvAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaSitFamigliaConvAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaSitFamigliaConvOperationCompleted == null)) {
                this.VerificaSitFamigliaConvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaSitFamigliaConvOperationCompleted);
            }
            this.InvokeAsync("VerificaSitFamigliaConv", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaSitFamigliaConvOperationCompleted, userState);
        }
        
        private void OnVerificaSitFamigliaConvOperationCompleted(object arg) {
            if ((this.VerificaSitFamigliaConvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaSitFamigliaConvCompleted(this, new VerificaSitFamigliaConvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaStatoFamigliaConv", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaStatoFamigliaConv(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaStatoFamigliaConv", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaStatoFamigliaConvAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaStatoFamigliaConvAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaStatoFamigliaConvAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaStatoFamigliaConvOperationCompleted == null)) {
                this.VerificaStatoFamigliaConvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaStatoFamigliaConvOperationCompleted);
            }
            this.InvokeAsync("VerificaStatoFamigliaConv", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaStatoFamigliaConvOperationCompleted, userState);
        }
        
        private void OnVerificaStatoFamigliaConvOperationCompleted(object arg) {
            if ((this.VerificaStatoFamigliaConvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaStatoFamigliaConvCompleted(this, new VerificaStatoFamigliaConvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaStoricaDocumenti", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaStoricaDocumenti(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaStoricaDocumenti", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaStoricaDocumentiAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaStoricaDocumentiAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaStoricaDocumentiAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaStoricaDocumentiOperationCompleted == null)) {
                this.VerificaStoricaDocumentiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaStoricaDocumentiOperationCompleted);
            }
            this.InvokeAsync("VerificaStoricaDocumenti", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaStoricaDocumentiOperationCompleted, userState);
        }
        
        private void OnVerificaStoricaDocumentiOperationCompleted(object arg) {
            if ((this.VerificaStoricaDocumentiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaStoricaDocumentiCompleted(this, new VerificaStoricaDocumentiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaStoricaIndividuo", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaStoricaIndividuo(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaStoricaIndividuo", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaStoricaIndividuoAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaStoricaIndividuoAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaStoricaIndividuoAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaStoricaIndividuoOperationCompleted == null)) {
                this.VerificaStoricaIndividuoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaStoricaIndividuoOperationCompleted);
            }
            this.InvokeAsync("VerificaStoricaIndividuo", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaStoricaIndividuoOperationCompleted, userState);
        }
        
        private void OnVerificaStoricaIndividuoOperationCompleted(object arg) {
            if ((this.VerificaStoricaIndividuoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaStoricaIndividuoCompleted(this, new VerificaStoricaIndividuoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaVaccinazioni", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaVaccinazioni(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaVaccinazioni", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaVaccinazioniAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaVaccinazioniAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaVaccinazioniAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaVaccinazioniOperationCompleted == null)) {
                this.VerificaVaccinazioniOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaVaccinazioniOperationCompleted);
            }
            this.InvokeAsync("VerificaVaccinazioni", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaVaccinazioniOperationCompleted, userState);
        }
        
        private void OnVerificaVaccinazioniOperationCompleted(object arg) {
            if ((this.VerificaVaccinazioniCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaVaccinazioniCompleted(this, new VerificaVaccinazioniCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaDomiciliatiperIndirizz" +
            "o", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaDomiciliatiperIndirizzo(byte TipoInterr, int CodiceVia, string DenominazioneVia, short Numero, string Lettera, string Lotto, string Palazzina, string Km, string Scala, string Piano, string Interno, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaDomiciliatiperIndirizzo", new object[] {
                        TipoInterr,
                        CodiceVia,
                        DenominazioneVia,
                        Numero,
                        Lettera,
                        Lotto,
                        Palazzina,
                        Km,
                        Scala,
                        Piano,
                        Interno,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaDomiciliatiperIndirizzoAsync(byte TipoInterr, int CodiceVia, string DenominazioneVia, short Numero, string Lettera, string Lotto, string Palazzina, string Km, string Scala, string Piano, string Interno, byte ServiceLevel) {
            this.VerificaDomiciliatiperIndirizzoAsync(TipoInterr, CodiceVia, DenominazioneVia, Numero, Lettera, Lotto, Palazzina, Km, Scala, Piano, Interno, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaDomiciliatiperIndirizzoAsync(byte TipoInterr, int CodiceVia, string DenominazioneVia, short Numero, string Lettera, string Lotto, string Palazzina, string Km, string Scala, string Piano, string Interno, byte ServiceLevel, object userState) {
            if ((this.VerificaDomiciliatiperIndirizzoOperationCompleted == null)) {
                this.VerificaDomiciliatiperIndirizzoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaDomiciliatiperIndirizzoOperationCompleted);
            }
            this.InvokeAsync("VerificaDomiciliatiperIndirizzo", new object[] {
                        TipoInterr,
                        CodiceVia,
                        DenominazioneVia,
                        Numero,
                        Lettera,
                        Lotto,
                        Palazzina,
                        Km,
                        Scala,
                        Piano,
                        Interno,
                        ServiceLevel}, this.VerificaDomiciliatiperIndirizzoOperationCompleted, userState);
        }
        
        private void OnVerificaDomiciliatiperIndirizzoOperationCompleted(object arg) {
            if ((this.VerificaDomiciliatiperIndirizzoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaDomiciliatiperIndirizzoCompleted(this, new VerificaDomiciliatiperIndirizzoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaDomiciliatiperIndirizz" +
            "oeFamiglia", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaDomiciliatiperIndirizzoeFamiglia(byte TipoInterr, int CodiceVia, string DenominazioneVia, short Numero, string Lettera, string Lotto, string Palazzina, string Km, string Scala, string Piano, string Interno, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaDomiciliatiperIndirizzoeFamiglia", new object[] {
                        TipoInterr,
                        CodiceVia,
                        DenominazioneVia,
                        Numero,
                        Lettera,
                        Lotto,
                        Palazzina,
                        Km,
                        Scala,
                        Piano,
                        Interno,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaDomiciliatiperIndirizzoeFamigliaAsync(byte TipoInterr, int CodiceVia, string DenominazioneVia, short Numero, string Lettera, string Lotto, string Palazzina, string Km, string Scala, string Piano, string Interno, byte ServiceLevel) {
            this.VerificaDomiciliatiperIndirizzoeFamigliaAsync(TipoInterr, CodiceVia, DenominazioneVia, Numero, Lettera, Lotto, Palazzina, Km, Scala, Piano, Interno, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaDomiciliatiperIndirizzoeFamigliaAsync(byte TipoInterr, int CodiceVia, string DenominazioneVia, short Numero, string Lettera, string Lotto, string Palazzina, string Km, string Scala, string Piano, string Interno, byte ServiceLevel, object userState) {
            if ((this.VerificaDomiciliatiperIndirizzoeFamigliaOperationCompleted == null)) {
                this.VerificaDomiciliatiperIndirizzoeFamigliaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaDomiciliatiperIndirizzoeFamigliaOperationCompleted);
            }
            this.InvokeAsync("VerificaDomiciliatiperIndirizzoeFamiglia", new object[] {
                        TipoInterr,
                        CodiceVia,
                        DenominazioneVia,
                        Numero,
                        Lettera,
                        Lotto,
                        Palazzina,
                        Km,
                        Scala,
                        Piano,
                        Interno,
                        ServiceLevel}, this.VerificaDomiciliatiperIndirizzoeFamigliaOperationCompleted, userState);
        }
        
        private void OnVerificaDomiciliatiperIndirizzoeFamigliaOperationCompleted(object arg) {
            if ((this.VerificaDomiciliatiperIndirizzoeFamigliaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaDomiciliatiperIndirizzoeFamigliaCompleted(this, new VerificaDomiciliatiperIndirizzoeFamigliaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaDomXRangeCivici", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaDomXRangeCivici(byte TipoInterr, byte TipoRange, int CodiceVia, string DenominazioneVia, short NumeroDa, short NumeroA, string LottoDa, string LottoA, string PalazzinaDa, string PalazzinaA, string KmDa, string KmA, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaDomXRangeCivici", new object[] {
                        TipoInterr,
                        TipoRange,
                        CodiceVia,
                        DenominazioneVia,
                        NumeroDa,
                        NumeroA,
                        LottoDa,
                        LottoA,
                        PalazzinaDa,
                        PalazzinaA,
                        KmDa,
                        KmA,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaDomXRangeCiviciAsync(byte TipoInterr, byte TipoRange, int CodiceVia, string DenominazioneVia, short NumeroDa, short NumeroA, string LottoDa, string LottoA, string PalazzinaDa, string PalazzinaA, string KmDa, string KmA, byte ServiceLevel) {
            this.VerificaDomXRangeCiviciAsync(TipoInterr, TipoRange, CodiceVia, DenominazioneVia, NumeroDa, NumeroA, LottoDa, LottoA, PalazzinaDa, PalazzinaA, KmDa, KmA, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaDomXRangeCiviciAsync(byte TipoInterr, byte TipoRange, int CodiceVia, string DenominazioneVia, short NumeroDa, short NumeroA, string LottoDa, string LottoA, string PalazzinaDa, string PalazzinaA, string KmDa, string KmA, byte ServiceLevel, object userState) {
            if ((this.VerificaDomXRangeCiviciOperationCompleted == null)) {
                this.VerificaDomXRangeCiviciOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaDomXRangeCiviciOperationCompleted);
            }
            this.InvokeAsync("VerificaDomXRangeCivici", new object[] {
                        TipoInterr,
                        TipoRange,
                        CodiceVia,
                        DenominazioneVia,
                        NumeroDa,
                        NumeroA,
                        LottoDa,
                        LottoA,
                        PalazzinaDa,
                        PalazzinaA,
                        KmDa,
                        KmA,
                        ServiceLevel}, this.VerificaDomXRangeCiviciOperationCompleted, userState);
        }
        
        private void OnVerificaDomXRangeCiviciOperationCompleted(object arg) {
            if ((this.VerificaDomXRangeCiviciCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaDomXRangeCiviciCompleted(this, new VerificaDomXRangeCiviciCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaCartaId", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaCartaId(string Carta, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaCartaId", new object[] {
                        Carta,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaCartaIdAsync(string Carta, byte ServiceLevel) {
            this.VerificaCartaIdAsync(Carta, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaCartaIdAsync(string Carta, byte ServiceLevel, object userState) {
            if ((this.VerificaCartaIdOperationCompleted == null)) {
                this.VerificaCartaIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaCartaIdOperationCompleted);
            }
            this.InvokeAsync("VerificaCartaId", new object[] {
                        Carta,
                        ServiceLevel}, this.VerificaCartaIdOperationCompleted, userState);
        }
        
        private void OnVerificaCartaIdOperationCompleted(object arg) {
            if ((this.VerificaCartaIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaCartaIdCompleted(this, new VerificaCartaIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaStoricoFamigliaXData", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaStoricoFamigliaXData(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte GiornoRif, byte MeseRif, short AnnoRif, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaStoricoFamigliaXData", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        GiornoRif,
                        MeseRif,
                        AnnoRif,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaStoricoFamigliaXDataAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte GiornoRif, byte MeseRif, short AnnoRif, byte ServiceLevel) {
            this.VerificaStoricoFamigliaXDataAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, GiornoRif, MeseRif, AnnoRif, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaStoricoFamigliaXDataAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte GiornoRif, byte MeseRif, short AnnoRif, byte ServiceLevel, object userState) {
            if ((this.VerificaStoricoFamigliaXDataOperationCompleted == null)) {
                this.VerificaStoricoFamigliaXDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaStoricoFamigliaXDataOperationCompleted);
            }
            this.InvokeAsync("VerificaStoricoFamigliaXData", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        GiornoRif,
                        MeseRif,
                        AnnoRif,
                        ServiceLevel}, this.VerificaStoricoFamigliaXDataOperationCompleted, userState);
        }
        
        private void OnVerificaStoricoFamigliaXDataOperationCompleted(object arg) {
            if ((this.VerificaStoricoFamigliaXDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaStoricoFamigliaXDataCompleted(this, new VerificaStoricoFamigliaXDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaNullaOstaCI", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaNullaOstaCI(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaNullaOstaCI", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaNullaOstaCIAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel) {
            this.VerificaNullaOstaCIAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaNullaOstaCIAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, byte ServiceLevel, object userState) {
            if ((this.VerificaNullaOstaCIOperationCompleted == null)) {
                this.VerificaNullaOstaCIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaNullaOstaCIOperationCompleted);
            }
            this.InvokeAsync("VerificaNullaOstaCI", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        ServiceLevel}, this.VerificaNullaOstaCIOperationCompleted, userState);
        }
        
        private void OnVerificaNullaOstaCIOperationCompleted(object arg) {
            if ((this.VerificaNullaOstaCICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaNullaOstaCICompleted(this, new VerificaNullaOstaCICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaPatente", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaPatente(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, string numeroPatente, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaPatente", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        numeroPatente,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaPatenteAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, string numeroPatente, byte ServiceLevel) {
            this.VerificaPatenteAsync(TipoInterr, CodiceIndividuale, CodiceFiscale, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, annoNascita, numeroPatente, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaPatenteAsync(byte TipoInterr, string CodiceIndividuale, string CodiceFiscale, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short annoNascita, string numeroPatente, byte ServiceLevel, object userState) {
            if ((this.VerificaPatenteOperationCompleted == null)) {
                this.VerificaPatenteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaPatenteOperationCompleted);
            }
            this.InvokeAsync("VerificaPatente", new object[] {
                        TipoInterr,
                        CodiceIndividuale,
                        CodiceFiscale,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        annoNascita,
                        numeroPatente,
                        ServiceLevel}, this.VerificaPatenteOperationCompleted, userState);
        }
        
        private void OnVerificaPatenteOperationCompleted(object arg) {
            if ((this.VerificaPatenteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaPatenteCompleted(this, new VerificaPatenteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LogHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servizi.comune.roma.it/verificheanagrafiche/VerificaAutoCertificazione", RequestNamespace="http://servizi.comune.roma.it/verificheanagrafiche", ResponseNamespace="http://servizi.comune.roma.it/verificheanagrafiche", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode VerificaAutoCertificazione(byte TipoInterr, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short AnnoNascita, byte GiornoRiferimento, byte MeseRiferimento, short AnnoRiferimento, byte ServiceLevel) {
            object[] results = this.Invoke("VerificaAutoCertificazione", new object[] {
                        TipoInterr,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        AnnoNascita,
                        GiornoRiferimento,
                        MeseRiferimento,
                        AnnoRiferimento,
                        ServiceLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaAutoCertificazioneAsync(byte TipoInterr, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short AnnoNascita, byte GiornoRiferimento, byte MeseRiferimento, short AnnoRiferimento, byte ServiceLevel) {
            this.VerificaAutoCertificazioneAsync(TipoInterr, Sesso, Cognome, Nome, GiornoNascita, MeseNascita, AnnoNascita, GiornoRiferimento, MeseRiferimento, AnnoRiferimento, ServiceLevel, null);
        }
        
        /// <remarks/>
        public void VerificaAutoCertificazioneAsync(byte TipoInterr, string Sesso, string Cognome, string Nome, byte GiornoNascita, byte MeseNascita, short AnnoNascita, byte GiornoRiferimento, byte MeseRiferimento, short AnnoRiferimento, byte ServiceLevel, object userState) {
            if ((this.VerificaAutoCertificazioneOperationCompleted == null)) {
                this.VerificaAutoCertificazioneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaAutoCertificazioneOperationCompleted);
            }
            this.InvokeAsync("VerificaAutoCertificazione", new object[] {
                        TipoInterr,
                        Sesso,
                        Cognome,
                        Nome,
                        GiornoNascita,
                        MeseNascita,
                        AnnoNascita,
                        GiornoRiferimento,
                        MeseRiferimento,
                        AnnoRiferimento,
                        ServiceLevel}, this.VerificaAutoCertificazioneOperationCompleted, userState);
        }
        
        private void OnVerificaAutoCertificazioneOperationCompleted(object arg) {
            if ((this.VerificaAutoCertificazioneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaAutoCertificazioneCompleted(this, new VerificaAutoCertificazioneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://servizi.comune.roma.it/verificheanagrafiche")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://servizi.comune.roma.it/verificheanagrafiche", IsNullable=false)]
    public partial class LogHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string logGuidField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string LogGuid {
            get {
                return this.logGuidField;
            }
            set {
                this.logGuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaAnagraficaCompletedEventHandler(object sender, VerificaAnagraficaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaAnagraficaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaAnagraficaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaAnagraficaSuperCompletedEventHandler(object sender, VerificaAnagraficaSuperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaAnagraficaSuperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaAnagraficaSuperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaCRICompletedEventHandler(object sender, VerificaCRICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaCRICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaCRICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaPermCompletedEventHandler(object sender, VerificaPermCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaPermCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaPermCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaLeggeRutelliCompletedEventHandler(object sender, VerificaLeggeRutelliCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaLeggeRutelliCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaLeggeRutelliCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaAnagraficaEstesaCompletedEventHandler(object sender, VerificaAnagraficaEstesaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaAnagraficaEstesaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaAnagraficaEstesaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaDocumentiCompletedEventHandler(object sender, VerificaDocumentiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaDocumentiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaDocumentiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaCartaIdentCompletedEventHandler(object sender, VerificaCartaIdentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaCartaIdentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaCartaIdentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaElettoraleCompletedEventHandler(object sender, VerificaElettoraleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaElettoraleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaElettoraleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaLevaMilitareCompletedEventHandler(object sender, VerificaLevaMilitareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaLevaMilitareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaLevaMilitareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaSitFamigliaConvCompletedEventHandler(object sender, VerificaSitFamigliaConvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaSitFamigliaConvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaSitFamigliaConvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaStatoFamigliaConvCompletedEventHandler(object sender, VerificaStatoFamigliaConvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaStatoFamigliaConvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaStatoFamigliaConvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaStoricaDocumentiCompletedEventHandler(object sender, VerificaStoricaDocumentiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaStoricaDocumentiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaStoricaDocumentiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaStoricaIndividuoCompletedEventHandler(object sender, VerificaStoricaIndividuoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaStoricaIndividuoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaStoricaIndividuoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaVaccinazioniCompletedEventHandler(object sender, VerificaVaccinazioniCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaVaccinazioniCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaVaccinazioniCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaDomiciliatiperIndirizzoCompletedEventHandler(object sender, VerificaDomiciliatiperIndirizzoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaDomiciliatiperIndirizzoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaDomiciliatiperIndirizzoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaDomiciliatiperIndirizzoeFamigliaCompletedEventHandler(object sender, VerificaDomiciliatiperIndirizzoeFamigliaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaDomiciliatiperIndirizzoeFamigliaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaDomiciliatiperIndirizzoeFamigliaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaDomXRangeCiviciCompletedEventHandler(object sender, VerificaDomXRangeCiviciCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaDomXRangeCiviciCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaDomXRangeCiviciCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaCartaIdCompletedEventHandler(object sender, VerificaCartaIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaCartaIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaCartaIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaStoricoFamigliaXDataCompletedEventHandler(object sender, VerificaStoricoFamigliaXDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaStoricoFamigliaXDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaStoricoFamigliaXDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaNullaOstaCICompletedEventHandler(object sender, VerificaNullaOstaCICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaNullaOstaCICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaNullaOstaCICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaPatenteCompletedEventHandler(object sender, VerificaPatenteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaPatenteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaPatenteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VerificaAutoCertificazioneCompletedEventHandler(object sender, VerificaAutoCertificazioneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaAutoCertificazioneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaAutoCertificazioneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591